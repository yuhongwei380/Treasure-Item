#version=DEVEL
# Use graphical install
graphical


%post --nochroot
#####copy kyinfo and LICENSE
if [ -e /tmp/.kyinfo ];then
  echo y | cp -a /tmp/.kyinfo $ANA_INSTALL_PATH/etc/
fi
if [ -e /tmp/LICENSE ];then
  echo y | cp -a /tmp/LICENSE $ANA_INSTALL_PATH/etc/
fi

if [ -e /run/install/repo/.kyinfo ];then
  echo y | cp -a /run/install/repo/.kyinfo $ANA_INSTALL_PATH/etc/
fi

if [ -e /run/install/repo/LICENSE ];then
  echo y | cp -a /run/install/repo/LICENSE $ANA_INSTALL_PATH/etc/
fi

##### kylin postaction
## cdrom install, copy .kylin-post-actions
if [ -e /run/install/repo/.kylin-post-actions ];then
  echo y | cp -a /run/install/repo/.kylin-post-actions /tmp/.kylin-post-actions
  echo "repo=/run/install/repo" > /tmp/.kylin-repo
fi
## copy kylin post scripts in new os
if [ -e /tmp/.kylin-post-actions ];then
  echo y | cp -a /tmp/.kylin-post-actions $ANA_INSTALL_PATH/bin
fi
if [ -e /tmp/.kylin-repo ];then
  echo y | cp -a /tmp/.kylin-repo $ANA_INSTALL_PATH/tmp/
fi

## copy and run .kylin-post-actions-nochroot
if [ -e /run/install/repo/.kylin-post-actions-nochroot ];then
  echo y | cp -a /run/install/repo/.kylin-post-actions-nochroot /tmp/.kylin-post-actions-nochroot
fi
if [ -e /tmp/.kylin-post-actions-nochroot ];then
  /bin/bash -x /tmp/.kylin-post-actions-nochroot &> $ANA_INSTALL_PATH/var/log/.kylin-post-actions-nochroot.log
fi

### do kylin post action
if [ -e /bin/.kylin-post-actions ];then
  /bin/bash -x /bin/.kylin-post-actions &> /var/log/.kylin-post-actions.log
fi
%end



%post
systemctl disable systemd-networkd-wait-online.service
systemctl disable multipathd.service

### do kylin post action
if [ -e /bin/.kylin-post-actions ];then
  /bin/bash -x /bin/.kylin-post-actions &> /var/log/.kylin-post-actions.log
fi

%end

%packages
@^minimal-environment

%end

# Keyboard layouts
keyboard --xlayouts='us'
# System language
lang en_US.UTF-8

# Network information
network  --hostname=localhost.localdomain

# Use CDROM installation media
cdrom

# Run the Setup Agent on first boot
firstboot --enable
# System services
services --enabled="chronyd"

# Use only SATA and NVMe disks
ignoredisk --only-use=sda

# Clear partitions on SATA disk
clearpart --drives=sda --all --initlabel

# Disk partitioning for system installation
part /boot/efi --fstype="vfat" --ondisk=sda --size=1024
part / --fstype="xfs" --grow --size=1 --ondisk=sda


# System timezone
timezone Asia/Shanghai --utc

# Root password
rootpw --iscrypted $6$1MdoTeSnMoBRsG5a$9xhgu7lm5wijA6HMPdZqO9Pu2DTXW5KXE1sHHSXaSEHDN3oQCK/ZKvB/EHOn2.gHyW3.NZGz/MEErQEtokiEJ1

%addon com_redhat_kdump --disable --reserve-mb='128'

%end

%post --nochroot --log=/mnt/sysimage/root/disk_install.log
#!/bin/bash
echo -e "n\np\n1\n\n\nw" | fdisk /dev/nvme0n1
echo -e "n\np\n1\n\n\nw" | fdisk /dev/nvme1n1
pvcreate /dev/nvme0n1p1
pvcreate /dev/nvme1n1p1
vgcreate  vm-data  /dev/nvme0n1p1  /dev/nvme1n1p1
lvcreate -L 1831414 -n  vm-data vm-data
lvextend -l +100%FREE  /dev/vm-data/vm-data
mkdir /data 
chmod 755 /data
mount  /dev/vm-data/vm-data  /data
echo "/dev/vm-data/vm-data  /data   xfs defaults 0 0"  >>  /etc/fstab
%end


%post --nochroot --log=/mnt/sysimage/root/post_install.log
#!/bin/bash

# 设置 nm-bond 的 IP 地址
IPADDR="192.168.1.100"
NETMASK="255.255.255.0"
GATEWAY="192.168.1.1" # 可选

# 查找所有万兆网卡
bonded_interfaces=()
for iface in $(ls /sys/class/net); do
  speed=$(ethtool "$iface" 2>/dev/null | grep "Speed" | awk '{print $2}')
  if [[ "$speed" == "1000Mb/s" ]]; then
  #if [[ "$speed" == "10000Mb/s" ]]; then #虚拟环境只能千兆测试
    bonded_interfaces+=("$iface")
  fi
done

# 检查是否找到至少两个万兆网卡
INTERFACE_COUNT=${#bonded_interfaces[@]}
if [[ $INTERFACE_COUNT -lt 2 ]]; then
  echo "Error: Less than two 10GbE interfaces found. Found $INTERFACE_COUNT" >> /mnt/sysimage/root/post_install.log
  exit 1
fi

# 将找到的网卡赋值给变量，最多取前两个
INTERFACE1="${bonded_interfaces[0]}"
INTERFACE2="${bonded_interfaces[1]}"

# 创建 nm-bond 配置文件到 /etc/sysconfig/network-scripts/
cat << EOF > /mnt/sysimage/etc/sysconfig/network-scripts/ifcfg-nm-bond
DEVICE=nm-bond
NAME=nm-bond
TYPE=Bond
BONDING_OPTS="mode=802.3ad miimon=100 downdelay=0 updelay=0 xmit_hash_policy=layer3+4"
#BONDING_OPTS="mode=balance-rr miimon=100 downdelay=0 updelay=0 xmit_hash_policy=layer3+4"
BOOTPROTO=static
PROXY_METHOD=none
BROWSER_ONLY=no
ONBOOT=yes
IPADDR=$IPADDR
NETMASK=$NETMASK
GATEWAY=$GATEWAY
EOF

# 创建网卡配置文件到 /etc/sysconfig/network-scripts/，并使其成为 nm-bond 的 slave
cat << EOF > /mnt/sysimage/etc/sysconfig/network-scripts/ifcfg-${INTERFACE1}
DEVICE=${INTERFACE1}
TYPE=Ethernet
BOOTPROTO=none
ONBOOT=yes
MASTER=nm-bond
SLAVE=yes
EOF

cat << EOF > /mnt/sysimage/etc/sysconfig/network-scripts/ifcfg-${INTERFACE2}
DEVICE=${INTERFACE2}
TYPE=Ethernet
BOOTPROTO=none
ONBOOT=yes
MASTER=nm-bond
SLAVE=yes
EOF

%end

%post
systemctl disable systemd-networkd-wait-online.service
systemctl disable multipathd.service
%end

%anaconda
pwpolicy root --minlen=8 --minquality=1 --strict --nochanges --notempty
pwpolicy user --minlen=8 --minquality=1 --strict --nochanges --emptyok
pwpolicy luks --minlen=8 --minquality=1 --strict --nochanges --notempty
%end

firstboot --disable
reboot
